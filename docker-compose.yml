version: '3.8'

services:
  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    container_name: complianceos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - complianceos-network

  # Nginx pour le reverse proxy en d√©veloppement
  nginx:
    image: nginx:alpine
    container_name: complianceos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    restart: unless-stopped
    networks:
      - complianceos-network

  # Backend API
  api:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.dev
    container_name: complianceos-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - NVIDIA_API_KEY=${NVIDIA_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    depends_on:
      - redis
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - complianceos-network

  # Frontend Web
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    container_name: complianceos-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - VITE_MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - complianceos-network

volumes:
  redis_data:
    driver: local

networks:
  complianceos-network:
    driver: bridge